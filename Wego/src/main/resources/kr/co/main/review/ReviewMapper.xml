<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.main.review.ReviewMapper">

	<!-- 리뷰 상세 보기 -->
	<select id="review" resultType="kr.co.main.review.ReviewVO">
		select title, content, regdate, (select count(Review_watch_pk) from wego.review_watch) as watch 
		,(select count(review_recommend_pk)  from wego.review_recommend) as recommend, Filename_save from wego.review left join wego.review_image
		on wego.review.review_pk = wego.review_image.Review_image_pk;
	</select>
	
	<!-- 리뷰목록 보기 -->
	<select id="reviewList" resultType="kr.co.main.review.ReviewVO">
		select title, regdate, (select nickname from wego.user) as nickname, (select count(review_watch_pk) from wego.review_watch) as watch 
		,(select count(review_recommend_pk)  from wego.review_recommend) as recommend, Filename_save from wego.review left join wego.review_image
		on wego.review.review_pk = wego.review_image.review_image_pk;
	</select>
	
	<!-- 페이징 처리-->
		

	<!-- 검색 -->
	<sql id="whereSql">
	<where>
			<if test="stype == 'all'">
			(title LIKE '%${sword }%' OR content LIKE '%${sword }%'	)
			</if>
			<if test="stype != 'all' and stype != null and stype !=''">
			${stype} LIKE '%${sword }%'
			</if>
			<if test="user_pk != 0">
			AND user_pk = #{user_pk}
			</if>
		</where>
	</sql>
	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="kr.co.main.review.ReviewVO"	>
		INSERT INTO wego.review (
			title, content, viewcount, regdate, filename_org, filename_save, user_pk
		) VALUES (
			#{title}, #{content}, 0, NOW(), #{filename_org}, #{filename_save}, #{user_pk}
		)
	</insert>
	
	<!-- 리뷰 수정 -->
	<update id="update" parameterType="kr.co.main.review.ReviewVO"	>
		UPDATE wego.review SET
			title = #{title}
			, content = #{content}
		WHERE review_pk = #{review_pk}
	</update>

	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="kr.co.main.review.ReviewVO">
			DELETE FROM wego.review WHERE review_pk = #{review_pk}
	</delete>
	
	<!-- 리뷰 조회수 -->
	<select id="reviewWatch" resultType="kr.co.main.review.ReviewVO">
		select count(review_pk) review_watch_count from wego.review_watch where review_pk = #{review_pk}
	</select>
	
	<!-- 리뷰 조회수 추가 -->
	<insert id="reviewWatchPlus" parameterType="kr.co.main.review.ReviewVO">
		INSERT INTO wego.review_watch
		            (review_pk,
		             user_pk,
		             plan_pk)
		SELECT #{review_pk},
		       #{user_pk},
		       #{plan_pk}
		FROM   DUAL
		WHERE  NOT EXISTS (SELECT user_pk
		                   FROM   wego.review_watch
		                   WHERE  review_pk = #{review_pk}
		                          AND user_pk = #{user_pk}); 
	</insert>
	
	<!-- 리뷰 추천수 -->
	<select id="reviewRecommend" resultType="kr.co.main.review.ReviewVO">
		select count(review_pk) review_recommend_count from wego.review_recommend where review_pk = #{review_pk}
	</select>
	
	<!-- 리뷰 추천수 추가-->
	<insert id="reviewRecommendPlus" parameterType="kr.co.main.review.ReviewVO">
		INSERT INTO wego.review_recommend
		            (review_pk,
		             user_pk,
		             plan_pk)
		SELECT #{review_pk},
		       #{user_pk},
		       #{plan_pk}
		FROM   DUAL
		WHERE  NOT EXISTS (SELECT user_pk
		                   FROM   wego.review_recommend
		                   WHERE  review_pk = #{review_pk}
		                          AND user_pk = #{user_pk}); 
	</insert>
	
	
	<!-- 리뷰 댓글 관련 -->
	
	<!-- 리뷰 댓글 등록 -->
	<insert id="insertReviewComment" parameterType="kr.co.main.review.ReviewVO">
		INSERT INTO wego.review_comment (user_pk,review_pk,plan_pk,regdate,comment_content)
		VALUES (#{user_pk},#{review_pk},#{plan_pk},#{regdate_comment},#{comment_content});
	</insert>
	
	<!-- 리뷰 댓글 조회 -->
	<select id="getReviewComments" parameterType="int">
    	select nickname, comment_content, review_comment.regdate regdate_comment, review_comment_pk, wego.user.user_pk
		from wego.review_comment left join wego.user 
		on wego.review_comment.user_pk = wego.user.user_pk where review_pk = #{review_pk};
	</select>
	
	
	
	<!-- 댓글 수정 -->
	<update id="commentUpdate" parameterType="kr.co.main.review.ReviewVO"	>
		update wego.review_comment set 
		comment_content = #{comment_content}
		where review_comment_pk = #{review_comment_pk};
	</update>


	<!-- 리뷰 댓글 삭제 -->
	<delete id="deleteReviewComment" parameterType="kr.co.main.review.ReviewVO">
			DELETE FROM wego.review_comment WHERE review_comment_pk = #{review_comment_pk}
	</delete>
	
	<!-- 리뷰 사진(첨부파일) 보기 -->
	<select id="selectReviewImage" parameterType="kr.co.main.review.ReviewVO">
		select * from wego.review_image where review_image_pk=? and filestate=?
		order by review_image_pk asc;
	</select>
	
	<!-- 리뷰 사진(첨부파일) 등록 -->
	<insert id="insertReviewImage" parameterType="kr.co.main.review.ReviewVO">
		INSERT INTO wego.review_image (plan_pk, review_pk, filename_org, filename_save, filesize, filestate) 
		values (#{plan_pk}, #{review_pk}, #{filename_org}, #{filename_save}, #{filesize}, #{filestate}); 
	</insert>
	
	<!-- 리뷰 사진(첨부파일) 삭제 -->
	<delete id="deleteReviewImage" parameterType="kr.co.main.review.ReviewVO">
		DELETE FROM wego.review_image WHERE review_image_pk = #{review_image_pk}
	</delete>
	
	<!-- 리뷰 신고 -->
	<insert id="insertReviewSue" parameterType="kr.co.main.review.ReviewVO">
		INSERT INTO wego.review_sue
		            (review_pk,
		             user_pk,
		             plan_pk)
		SELECT #{review_pk},
		       #{user_pk},
		       #{plan_pk}
		FROM   DUAL
		WHERE  NOT EXISTS (SELECT user_pk
		                   FROM   wego.review_sue
		                   WHERE  review_pk = #{review_pk}
		                          AND user_pk = #{user_pk}); 
	</insert>
	
	
	
	
	
	<select id="count" parameterType="kr.co.main.review.ReviewVO" resultType="int">
		SELECT COUNT(*) FROM wego.review 
		<include refid="whereSql"/>
	</select>
	
	<select id="list" parameterType="kr.co.main.review.ReviewVO" resultType="kr.co.main.review.ReviewVO">
		SELECT * ,
			(SELECT nickname FROM wego.user WHERE  user_pk= wego.review.user_pk)  nickname,
			(SELECT COUNT(*) FROM wego.review_watch WHERE review_pk = wego.review.review_pk) AS review_watch_count,
			(SELECT COUNT(*) FROM wego.review_recommend WHERE review_pk = wego.review.review_pk) AS review_recommend_count,
			(SELECT filename_save FROM wego.review_image WHERE review_pk = wego.review.review_pk AND filestate = 1 ORDER BY REview_image_pk DESC LIMIT 1) AS imagename
		FROM wego.review
		
		<include refid="whereSql"/>
		
		ORDER BY regdate DESC, review_pk DESC
		LIMIT ${startIdx}, 8
	</select>
	
	<select id="view" parameterType="kr.co.main.review.ReviewVO" resultType="kr.co.main.review.ReviewVO">
		SELECT *,
			(SELECT filename_save FROM wego.review_image WHERE review_pk = wego.review.review_pk AND filestate = 1 ORDER BY REview_image_pk DESC LIMIT 1) AS imagename
		FROM wego.review WHERE review_pk=#{review_pk}
	</select>


	<!-- 사진 -->
	<insert id="savingReview_image" parameterType="kr.co.main.review.ReviewVO">
		insert into wego.review_image (
			plan_pk, review_pk, filename_org, filename_save, filesize, filestate
		) values(
			#{plan_pk}, #{review_pk}, #{filename_org}, #{filename_save}, #{filesize}, #{filestate}
		)
		
	</insert>
	
	<select id="savedImages" parameterType="int">
		select filename_save from wego.review_image where review_pk = #{x}
	</select>

	<select id="dragingImage" parameterType="kr.co.main.review.ReviewVO" resultType="kr.co.main.review.ReviewVO">
		select review_pk, filename_save from wego.review_image where review_pk = #{oh} and filestate=1
	</select>


		
</mapper>



