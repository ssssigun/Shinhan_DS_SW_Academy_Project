<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.main.myRecord.accountBook.AccountMapper">

	<!-- 막대를 위한 전체 비율 가져오기 -->
	<select id="totalRate" parameterType="int" resultType="kr.co.main.myRecord.accountBook.TotalRateVO"> 
		SELECT IFNULL(ROUND((b.sum/(b.sum+u.sum))*100),50) total, IFNULL(ROUND((b.food/(b.food + u.food))*100),50) food, IFNULL(ROUND(b.accommodation/(b.accommodation+u.accommodation)*100),50) accommodation, IFNULL(ROUND(b.shopping/(b.shopping+u.shopping)*100),50) shopping, IFNULL(ROUND(b.culture/(b.culture+u.culture)*100),50) culture, IFNULL(ROUND(b.tour/(b.tour+u.tour)*100),50) tour, IFNULL(ROUND(b.leisure/(b.leisure+u.leisure)*100),50) leisure
		FROM (SELECT food+accommodation+shopping+culture+tour+leisure sum, food, accommodation, shopping, culture, tour, leisure FROM wego.statistics WHERE user_pk = #{user_pk} AND state = 0) b,
			 (SELECT food+accommodation+shopping+culture+tour+leisure sum, food, accommodation, shopping, culture, tour, leisure FROM wego.statistics WHERE user_pk = #{user_pk} AND state = 1) u;
	</select>
	
	<!-- 가게부 하단 여행 리스트 불러오기 -->
	<select id="getReportList" resultType="kr.co.main.myRecord.accountBook.ReportVO">
		<!-- 여행 계획 (계획 pk, 제목, 인원수, 총사용금액, 시작날짜, 종료날짜) -->
		SELECT p.plan_pk, p.title, p.num_of_people, u.total_usage, p.start_date, p.end_date
		FROM wego.plan p, (SELECT plan_pk, sum(amount) total_usage FROM wego.usage GROUP BY plan_pk) u
		WHERE p.plan_pk = u.plan_pk AND p.user_pk = #{user_pk}
		limit #{start_page}, 4;
	</select>
	
	<!-- 여행 리스트 전체 크기 가져오기 -->
	<select id="getCountReportList" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM wego.plan WHERE state = 1 AND user_pk = #{user_pk};
	</select>
	
	<!-- 육각형을 위한 비율 가져오기 -->
	<select id="getTotalRateForRadar" parameterType="int" resultType="kr.co.main.myRecord.accountBook.TotalRateVO">
		SELECT IFNULL(ROUND(u.food/b.food*100), 0) radar_food, IFNULL(ROUND(u.accommodation/b.accommodation*100), 0) radar_accommodation, IFNULL(ROUND(u.shopping/b.shopping*100), 0) radar_shopping, IFNULL(ROUND(u.culture/b.culture*100), 0) radar_culture, IFNULL(ROUND(u.tour/b.tour*100), 0) radar_tour, IFNULL(ROUND(u.leisure/b.leisure*100), 0) radar_leisure
		FROM wego.statistics u, (SELECT AVG(food) food, AVG(accommodation) accommodation, AVG(shopping) shopping, AVG(culture) culture, AVG(tour) tour, AVG(leisure) leisure FROM wego.statistics GROUP BY user_pk, state HAVING state = 1) b
		WHERE state = 1 AND user_pk = #{user_pk};
	</select>
	

	<!-- 여행 계획 및 날짜 별로 사용 내역 가져오기 -->
	<select id="getUsageForUsageList" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT u.category, u.content, u.amount, u.usage_date, l.location_name FROM wego.usage u, wego.location l
		WHERE l.location_pk = u.location_pk AND plan_pk = #{plan_pk} AND usage_date = #{date};
	</select>
	
	<!-- 일 별 예산 전체 금액, 사용 전체 금액, 둘의 비율 가져오기 -->
	<select id="getTotalForDay" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT IFNULL(ROUND(pd.total_budget/(pd.total_budget+u.total_amount)*100), 0) rate, u.total_amount amount, pd.total_budget budget
		FROM (SELECT SUM(amount) total_amount, usage_date FROM wego.usage WHERE plan_pk = #{plan_pk} GROUP BY usage_date) u, (SELECT SUM(budget) total_budget, date_format(start_time, '%Y-%m-%d') d FROM wego.plan_detail WHERE plan_pk = #{plan_pk} GROUP BY d) pd
		WHERE u.usage_date = pd.d AND u.usage_date = #{date};
	</select>
	
	<!-- 일 별 예산과 실제 사용 금액 묶어서 가져오기 -->
	<select id="getCompareForUsageListForDay" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT u.location_name, IFNULL(p.budget, 0) budget, u.amount, IFNULL(ROUND(p.budget/(p.budget+u.amount)*100), 0) rate
		FROM (SELECT l.location_name, u.location_pk, u.plan_pk, u.plan_detail_pk, u.amount, u.usage_date FROM wego.usage u, wego.location l WHERE l.location_pk = u.location_pk) u
		LEFT JOIN
		     wego.plan_detail p
		ON u.plan_pk = p.plan_pk AND u.location_pk = p.location_pk
		WHERE u.Usage_date = #{date} AND u.plan_pk = #{plan_pk};
	</select>
	
	<!-- 일 별 통계를 위한 카테고리 별 금액 -->
	<select id="getGraphForUsageListForDay" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT u.sum, u.category, u.usage_date, ROUND((u.sum/tu.sum)*100) rate
		FROM (SELECT SUM(amount) sum, category, usage_date FROM wego.usage
			GROUP BY category, usage_date, plan_pk
			HAVING usage_date = #{date} AND plan_pk = #{plan_pk}) u
		, (SELECT SUM(amount) sum
			FROM wego.usage
			GROUP BY usage_date, plan_pk
			HAVING usage_date = #{date} AND plan_pk = #{plan_pk}) tu;
	</select>
	
</mapper>




