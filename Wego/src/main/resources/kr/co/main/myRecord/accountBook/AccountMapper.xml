<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.main.myRecord.accountBook.AccountMapper">

	<!-- 막대를 위한 전체 비율 가져오기 -->
	<select id="totalRate" parameterType="int" resultType="kr.co.main.myRecord.accountBook.TotalRateVO"> 
		SELECT	IFNULL(ROUND((b.sum/(b.sum+u.sum))*100),50) total,
						IFNULL(ROUND((b.food/(b.food + u.food))*100),50) food,
						IFNULL(ROUND(b.accommodation/(b.accommodation+u.accommodation)*100),50) accommodation,
						IFNULL(ROUND(b.shopping/(b.shopping+u.shopping)*100),50) shopping,
						IFNULL(ROUND(b.culture/(b.culture+u.culture)*100),50) culture,
						IFNULL(ROUND(b.tour/(b.tour+u.tour)*100),50) tour,
						IFNULL(ROUND(b.leisure/(b.leisure+u.leisure)*100),50) leisure
		FROM		(SELECT	food+accommodation+shopping+culture+tour+leisure sum,
										food,
		                accommodation,
		                shopping,
		                culture,
		                tour,
		                leisure
						FROM	wego.statistics
		        WHERE	user_pk = #{user_pk}
									AND state = 0) b,
						(SELECT	food+accommodation+shopping+culture+tour+leisure sum,
										food,
		                accommodation,
		                shopping,
		                culture,
		                tour,
		                leisure
						FROM	wego.statistics
		        WHERE	user_pk = #{user_pk}
									AND state = 1) u;
	</select>
	
	<!-- 가게부 하단 여행 리스트 불러오기 -->
	<select id="getReportList" resultType="kr.co.main.myRecord.accountBook.ReportVO">
		<!-- 여행 계획 (계획 pk, 제목, 인원수, 총사용금액, 시작날짜, 종료날짜) -->
		SELECT p.plan_pk, p.title, p.num_of_people, u.total_usage, p.start_date, p.end_date
		FROM wego.plan p, (SELECT plan_pk, sum(amount) total_usage FROM wego.usage GROUP BY plan_pk) u
		WHERE p.plan_pk = u.plan_pk AND p.user_pk = #{user_pk} AND p.state=1
		limit #{start_page}, 4;
	</select>
	
	<!-- 여행 리스트 전체 크기 가져오기 -->
	<select id="getCountReportList" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM wego.plan WHERE state = 1 AND user_pk = #{user_pk};
	</select>
	
	<!-- 육각형을 위한 비율 가져오기 -->
	<select id="getTotalRateForRadar" parameterType="int" resultType="kr.co.main.myRecord.accountBook.TotalRateVO">
		SELECT IFNULL(ROUND(food/(SELECT SUM(food) FROM wego.statistics GROUP BY state HAVING state = 1)*100), 0) radar_food,
		       IFNULL(ROUND(accommodation/(SELECT SUM(accommodation) FROM wego.statistics GROUP BY state HAVING state = 1)*100), 0) radar_accommodation,
		       IFNULL(ROUND(shopping/(SELECT SUM(shopping) FROM wego.statistics GROUP BY state HAVING state = 1)*100), 0) radar_shopping,
		       IFNULL(ROUND(culture/(SELECT SUM(culture) FROM wego.statistics GROUP BY state HAVING state = 1)*100), 0) radar_culture,
		       IFNULL(ROUND(tour/(SELECT SUM(tour) FROM wego.statistics GROUP BY state HAVING state = 1)*100), 0) radar_tour,
		       IFNULL(ROUND(leisure/(SELECT SUM(leisure) FROM wego.statistics GROUP BY state HAVING state = 1)*100), 0) radar_leisure
		FROM wego.statistics
		WHERE state = 1
		AND   user_pk = #{user_pk};
	</select>

	<!-- 여행 계획 및 날짜 별로 사용 내역 가져오기 -->
	<select id="getUsageForUsageList" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT u.category,
		       u.content,
		       u.amount,
		       u.usage_date,
		       l.location_name
		FROM   wego.usage u,
		       wego.location l
		WHERE  l.location_pk = u.location_pk
		       AND plan_pk = #{plan_pk}
		       AND usage_date BETWEEN #{start_date} AND #{end_date}; 
	</select>
	
	<!-- 일 별 예산 전체 금액, 사용 전체 금액, 둘의 비율 가져오기 -->
	<select id="getTotalForDay" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT Ifnull(Round(pd.total_budget / ( pd.total_budget + u.total_amount ) * 100), 0) rate,
			     u.total_amount  amount,
			     pd.total_budget budget
		FROM   (SELECT Ifnull(Sum(amount), 0) total_amount
				   FROM   wego.usage
				   WHERE  plan_pk = #{plan_pk}
				   	      AND usage_date BETWEEN #{start_date} AND #{end_date}
			     GROUP  BY usage_date
				   UNION ALL
				   SELECT 0 total_amount
				   FROM   dual
           ORDER BY total_amount desc
				   limit  1) u,
			     (SELECT Sum(budget) total_budget
				   FROM   wego.plan_detail
				   WHERE  plan_pk = #{plan_pk}
					        AND Date_format(start_time, '%Y-%m-%d') BETWEEN #{start_date} AND #{end_date}
				   GROUP  BY Date_format(start_time, '%Y-%m-%d')
				   UNION ALL
				   SELECT 0 total_budget
				   FROM   dual
           ORDER BY total_budget desc
				   limit  1) pd;
	</select>
	<select id="getTotalForAll" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT Ifnull(Round(pd.total_budget / ( pd.total_budget + u.total_amount ) * 100), 0) rate,
		       u.total_amount  amount,
		       pd.total_budget budget
		FROM   (SELECT Sum(amount) total_amount
		        FROM   wego.usage
		        WHERE  plan_pk = #{plan_pk}) u,
		       (SELECT Sum(budget) total_budget
		        FROM   wego.plan_detail
		        WHERE  plan_pk = #{plan_pk}) pd; 
	</select>
	
	<!-- 일 별 예산과 실제 사용 금액 묶어서 가져오기 -->
	<select id="getCompareForUsageListForDay" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT	u_pd.date,
						l.location_name,
		        IFNULL(u_pd.budget, 0) budget,
		        IFNULL(u_pd.amount, 0) amount,
        		IFNULL(IF(u_pd.amount IS NULL, 100, ROUND(u_pd.budget/(u_pd.budget+u_pd.amount)*100)), 0) rate
		FROM	(
					SELECT	*
					FROM	(SELECT	u.location_pk,
												u.amount,
												u.usage_date date,
												u.plan_pk,
												pd.plan_detail_pk,
												pd.budget
								FROM	wego.usage u
										LEFT JOIN
										wego.plan_detail pd
								ON	    u.plan_detail_pk = pd.plan_detail_pk
								WHERE	u.plan_pk = #{plan_pk}) u_pd
								UNION
								(SELECT	pd.location_pk,
										null amount,
										Date_format(pd.start_time, '%Y-%m-%d') date,
										pd.plan_pk,
										pd.plan_detail_pk,
										pd.budget
								FROM	wego.plan_detail pd
								WHERE	pd.plan_pk = #{plan_pk}
										AND pd.plan_detail_pk NOT IN (SELECT	u.plan_detail_pk
																	 FROM		wego.usage u
																	 WHERE		u.plan_pk = #{plan_pk}
																				AND u.plan_detail_pk IS NOT NULL))
					) u_pd,
					wego.location l
		WHERE	u_pd.location_pk = l.location_pk
					AND u_pd.date BETWEEN #{start_date} AND #{end_date};
	</select>
	
	<!-- 일 별 통계를 위한 카테고리 별 금액 -->
	<select id="getGraphForUsageListForDay" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT	u.usage_date,
						u.category,
        		SUM(u.amount) sum,
		        ROUND(SUM(u.amount) / (SELECT	SUM(u.amount)
																	FROM	wego.usage u
																	WHERE	u.plan_pk = #{plan_pk}
																				AND u.usage_date BETWEEN #{start_date} AND #{end_date}) * 100) rate
		FROM	wego.usage u
		WHERE	1=1
					AND u.usage_date BETWEEN #{start_date} AND #{end_date}
					AND u.plan_pk = #{plan_pk}
		GROUP BY	u.usage_date,
							u.category;      
	</select>
	<select id="getGraphForUsageListForAll" parameterType="Map" resultType="kr.co.main.myRecord.accountBook.AccountBookVO">
		SELECT	u.category,
						SUM(u.amount) sum,
						ROUND(SUM(u.amount) / (SELECT	SUM(u.amount)
																	FROM	wego.usage u
																	WHERE	u.plan_pk = #{plan_pk}) * 100) rate
		FROM	wego.usage u
		WHERE	1=1
					AND u.plan_pk = #{plan_pk}
		GROUP BY	u.category;
	</select>
	
</mapper>